package org.o7planning.thymeleaf.controller;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.o7planning.thymeleaf.form.PersonForm;
import org.o7planning.thymeleaf.model.Person;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
@RequestMapping(value = "/person")
public class HomeController {
	
	private static List<Person> persons = new ArrayList<>();
	
	static {
		persons.add(new Person("Bill", "Gates"));
        persons.add(new Person("Steve", "Jobs"));
	}

	@GetMapping("/")
	public String index(Model model) {
		model.addAttribute("persons", persons);
		return "layout/listPerson";
	}
	
	@RequestMapping(value = "/addPerson", method = RequestMethod.GET)
	public String addPerson(Model model) {
		PersonForm personForm = new PersonForm();
		model.addAttribute("personForm", personForm);
		return "layout/addPerson";
	}
	
	@RequestMapping(value = "/addPerson", method = RequestMethod.POST)
	public String savePerson(Model model, @ModelAttribute("personForm") PersonForm personForm) {
		String firstName = personForm.getFirstName();
		String lastName = personForm.getLastName();
		 if (firstName != null && firstName.length() > 0 //
	                && lastName != null && lastName.length() > 0) {
	            Person newPerson = new Person(firstName, lastName);
	            persons.add(newPerson);
	 
	            return "redirect:";
	       }
		return "layout/addPerson";
	}
	
	@RequestMapping(value = "/showUpdate/{firstName}", method = RequestMethod.GET)
	public String showUpdate(Model model, @PathVariable("firstName") String firstName) {
		PersonForm personForm = new PersonForm();
		for(Person person : persons) {
			if(firstName.equals(person.getFirstName())) {
				personForm.setFirstName(person.getFirstName());
				personForm.setLastName(person.getLastName());
			}
		}
		model.addAttribute("personForm", personForm);
		return "layout/showUpdate";
	}
	
	@RequestMapping(value = "/doUpdate", method = RequestMethod.POST)
	public String doUpdate(Model model, @ModelAttribute("personForm") PersonForm personForm) {
		return "redirect:";
	}
	
	@RequestMapping(value = "/delete/{firstName}", method = RequestMethod.GET)
	public String delete(@PathVariable("firstName")String firstName) {
		for(Iterator<Person> person = persons.iterator(); person.hasNext();) {
			if (firstName.equals(person.next().getFirstName())) {
				person.remove();
			}
		}
		return "redirect:/person/";
	}
}
------------------------------------------------------------------------------------------------------
---> list person

<!DOCTYPE HTML>
<html xmlns:th="http://www.thymeleaf.org">
   <head>
      <meta charset="UTF-8" />
      <title>Person List</title>
      <link rel="stylesheet" type="text/css" th:href="@{/css/style.css}"/>
   </head>
   <body>
      <h1>Person List</h1>
      <a href="addPerson">Add Person</a>
      <br/><br/>
      <div>
         <table border="1">
            <tr>
               <th>First Name</th>
               <th>Last Name</th>
            </tr>
            <tr th:each ="person : ${persons}">
               <td th:utext="${person.firstName}">...</td>
               <td th:utext="${person.lastName}">...</td>
            </tr>
         </table>
      </div>
      <div>
         <select>
            <option th:each = "role : ${T(org.o7planning.thymeleaf.enums.State).values()}" th:value = "${role}"  th:text = "${role}"></option>
         </select>
      </div>
   </body>
</html>
